{
  "chunk_id": "function_setupPerformance",
  "title": "setupPerformance",
  "content": "---\nid: setupPerformance\ntitle: setupPerformance() - Deep Dive\ntags: [function, core, sync, internal]\ncomplexity: low\nsideEffects: no\n---\n\n# setupPerformance()\n\n## Overview\nHigh-performance setup for critical applications\n\n**Location**: `src/setup.ts` \n**Module**: core \n**Exported**: No \n\n## Signature\n```typescript\nfunction setupPerformance(options?: TryErrorConfig = {}): void\n```\n\n## Parameters\n- **options** (`TryErrorConfig = {}`) - Optional\n\n## Characteristics\n\n### Behavior\n- **Async**: No\n- **Throws Errors**: No\n- **Uses Generics**: No\n- **Recursive**: Yes\n\n### Integration\n- **Uses Config**: Yes\n- **Emits Events**: No\n- **Uses Object Pool**: No\n- **Context Support**: No\n\n### Side Effects\nNone detected\n\n### Dependencies\n- setupPerformance()\n- configure()\n- setupTesting()\n\n### Complexity\n- **Estimated**: low\n- **Loops**: Few/None\n- **Conditions**: Simple\n\n## Examples\n\n### Example 1\n```typescript\n* ```typescript\n * // For high-throughput APIs or performance-critical applications\n * import { setupPerformance } from 'try-error/setup';\n *\n * setupPerformance(); // Maximum performance\n *\n * // With minimal error reporting\n * setupPerformance({\n * onError: (error) => {\n * // Only log critical errors\n * if (error.type === 'CriticalError') {\n * console.error(`CRITICAL: ${error.message}`);\n * }\n * }\n * });\n * ```\n```\n\n## Implementation Notes\nNo special implementation notes.\n\n## Performance Considerations\n- Recursive implementation - watch for stack overflow with large inputs\n\n## Common Patterns\nNo specific patterns identified.",
  "metadata": {
    "chunk_id": "function_setupPerformance",
    "source_document": "rag-docs/functions/setupPerformance.md",
    "chunk_type": "function-reference",
    "last_updated": "2025-07-08T20:17:18.327Z",
    "topics": [
      "setupperformance()",
      "overview",
      "signature",
      "parameters",
      "characteristics",
      "behavior",
      "integration",
      "side effects",
      "dependencies",
      "complexity",
      "examples",
      "example 1",
      "implementation notes",
      "performance considerations",
      "common patterns",
      "typescript",
      "error",
      "async",
      "sync",
      "function",
      "testing",
      "performance"
    ],
    "complexity": "low",
    "includes_code": true,
    "line_count": 82,
    "token_count": 271,
    "module": "core",
    "category": "performance",
    "search_keywords": [
      "setupPerformance",
      "configure",
      "setupTesting",
      "error",
      "No",
      "TryErrorConfig",
      "Yes",
      "Few",
      "Simple"
    ],
    "common_questions": [
      "How do I use setupPerformance?",
      "What does setupPerformance do?",
      "setupPerformance example"
    ],
    "id": "setupPerformance",
    "title": "setupPerformance() - Deep Dive",
    "tags": [
      "function",
      "core",
      "sync",
      "internal"
    ],
    "sideEffects": "no",
    "function_name": "setupPerformance",
    "parameters": [
      "id",
      "title",
      "tags",
      "complexity",
      "sideEffects"
    ],
    "return_type": "unknown",
    "related_chunks": [
      "TryErrorBoundary_deep_dive_quick-reference",
      "TryErrorBoundary_deep_dive_signature",
      "TryErrorBoundary_deep_dive_purpose",
      "TryErrorBoundary_deep_dive_implementation-details",
      "TryErrorBoundary_deep_dive_basic-usage-examples",
      "TryErrorBoundary_deep_dive_advanced-usage-patterns",
      "TryErrorBoundary_deep_dive_hook-integration",
      "TryErrorBoundary_deep_dive_error-monitoring-integration",
      "TryErrorBoundary_deep_dive_testing-strategies",
      "TryErrorBoundary_deep_dive_performance-optimization"
    ],
    "related_functions": [],
    "usage_patterns": [
      "async-operations",
      "testing",
      "performance-optimization"
    ],
    "cross_references": [
      "TryErrorBoundary_deep_dive_signature",
      "configure_deep_dive_signature",
      "create_error_deep_dive_signature",
      "create_error_deep_dive_common-patterns",
      "fromThrown_deep_dive_signature",
      "function_configure",
      "function_intern",
      "function_setupTesting",
      "index_overview",
      "isTryError_deep_dive_signature",
      "tryAsync_deep_dive_signature",
      "trySync_deep_dive_signature",
      "trySync_deep_dive_common-patterns",
      "useTry_deep_dive_signature",
      "wrapError_deep_dive_signature"
    ]
  },
  "hash": "16d5d8bf24a25f2a729bf305eefe76c9"
}