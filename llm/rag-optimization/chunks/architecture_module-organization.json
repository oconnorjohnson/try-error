{
  "chunk_id": "architecture_module-organization",
  "title": "Module Organization",
  "content": "## Module Organization\n\n### async\n- **Files**: 2\n- **Purpose**: Asynchronous error handling utilities\n- **Key Functions**: tryAwait, tryAnyAsync, withTimeout, createRateLimiter, setProgress\n\n### core\n- **Files**: 10\n- **Purpose**: Core error creation and handling functionality\n- **Key Functions**: setFlag, clearFlag, hasFlag, toggleFlag, setFlags\n\n### config\n- **Files**: 1\n- **Purpose**: Configuration management\n- **Key Functions**: getConfigVersion, validateConfig, configure, getConfig, resetConfig\n\n### errors\n- **Files**: 1\n- **Purpose**: Error types and creation functions\n- **Key Functions**: invalidateEnvironmentCache, getCachedConfig, isProduction, detectEnvironmentAndRuntime, detectEnvironment\n\n### middleware\n- **Files**: 1\n- **Purpose**: Middleware system for error processing\n- **Key Functions**: compose, filterMiddleware, rateLimitMiddleware, next, dispatch\n\n### sync\n- **Files**: 2\n- **Purpose**: Synchronous error handling utilities\n- **Key Functions**: createTryError, unwrap, unwrapOr, isOk, isErr\n\n### types\n- **Files**: 1\n- **Purpose**: TypeScript type definitions\n- **Key Functions**: isTryError, isTrySuccess, unwrapTryResult, serializeTryError, deserializeTryError\n\n### utils\n- **Files**: 1\n- **Purpose**: Utility functions and helpers\n- **Key Functions**: createEnhancedError, isErrorOfType, isErrorOfTypes, getErrorMessage, getErrorContext\n\n### react\n- **Files**: 30\n- **Purpose**: React-specific hooks and components\n- **Key Functions**: SimpleCounter, increment, decrement, reset, TupleExample",
  "metadata": {
    "chunk_id": "architecture_module-organization",
    "source_document": "rag-docs/architecture.md",
    "chunk_type": "conceptual",
    "last_updated": "2025-07-08T20:17:18.280Z",
    "topics": [
      "module organization",
      "async",
      "core",
      "config",
      "errors",
      "middleware",
      "sync",
      "types",
      "utils",
      "react",
      "error",
      "function",
      "typescript",
      "hook",
      "component",
      "configuration"
    ],
    "complexity": "intermediate",
    "includes_code": false,
    "line_count": 46,
    "token_count": 228,
    "module": "core",
    "category": "utilities",
    "search_keywords": [
      "Asynchronous",
      "Core",
      "Configuration",
      "Error",
      "Middleware",
      "Synchronous",
      "TypeScript",
      "Utility",
      "React",
      "SimpleCounter"
    ],
    "common_questions": [
      "What is module organization?",
      "Module Organization architecture",
      "Module Organization explanation"
    ],
    "related_chunks": [
      "architecture_dependency-graph",
      "architecture_event-system",
      "architecture_configuration-system",
      "architecture_factory-functions",
      "architecture_error-handling-functions",
      "architecture_utility-functions",
      "architecture_middleware-functions",
      "architecture_hook-functions-react",
      "architecture_function-complexity-distribution",
      "architecture_async-vs-sync"
    ],
    "related_functions": [],
    "usage_patterns": [
      "async-operations",
      "react-integration"
    ],
    "cross_references": [
      "TryErrorBoundary_deep_dive_purpose",
      "configure_deep_dive_purpose",
      "create_error_deep_dive_purpose",
      "fromThrown_deep_dive_purpose",
      "function_Component",
      "function_SimpleCounter",
      "function_TupleExample",
      "function_clear",
      "function_clearFlag",
      "function_compose",
      "function_configure",
      "function_createEnhancedError",
      "function_createRateLimiter",
      "function_createTryError",
      "function_decrement",
      "function_deserializeTryError",
      "function_detectEnvironment",
      "function_detectEnvironmentAndRuntime",
      "function_dispatch",
      "function_filterMiddleware",
      "function_getCachedConfig",
      "function_getConfig",
      "function_getConfigVersion",
      "function_getErrorContext",
      "function_getErrorMessage",
      "function_hasFlag",
      "function_increment",
      "function_invalidateEnvironmentCache",
      "function_isErr",
      "function_isErrorOfType",
      "function_isErrorOfTypes",
      "function_isOk",
      "function_isProduction",
      "function_isTryError",
      "function_isTrySuccess",
      "function_next",
      "function_rateLimitMiddleware",
      "function_reset",
      "function_resetConfig",
      "function_serializeTryError",
      "function_setFlag",
      "function_setFlags",
      "function_setProgress",
      "function_toggleFlag",
      "function_tryAnyAsync",
      "function_tryAwait",
      "function_unwrap",
      "function_unwrapOr",
      "function_unwrapTryResult",
      "function_validateConfig",
      "function_withTimeout",
      "isTryError_deep_dive_purpose",
      "architecture_utility-functions",
      "tryAsync_deep_dive_purpose",
      "trySync_deep_dive_purpose",
      "useTry_deep_dive_purpose",
      "wrapError_deep_dive_purpose"
    ]
  },
  "hash": "59d149ddbab218ef84592d61c5b602ca"
}