{
  "chunk_id": "function_usePersistedState",
  "title": "usePersistedState",
  "content": "---\nid: usePersistedState\ntitle: usePersistedState() - Deep Dive\ntags: [function, react, sync, internal]\ncomplexity: medium\nsideEffects: no\n---\n\n# usePersistedState()\n\n## Overview\nHook for state with localStorage persistence\n\n**Location**: `packages/react/src/hooks/useTryState.ts` \n**Module**: react \n**Exported**: No \n\n## Signature\n```typescript\nfunction usePersistedState(key: string, initialValue: T): [T, (value: T | ((current: T) => T)) => void, TryError | null]\n```\n\n## Parameters\n- **key** (`string`)\n- **initialValue** (`T`)\n\n## Characteristics\n\n### Behavior\n- **Async**: No\n- **Throws Errors**: No\n- **Uses Generics**: Yes\n- **Recursive**: No\n\n### Integration\n- **Uses Config**: No\n- **Emits Events**: No\n- **Uses Object Pool**: No\n- **Context Support**: No\n\n### Side Effects\nNone detected\n\n### Dependencies\n- getItem()\n- setState()\n- trySync()\n- setItem()\n\n### Complexity\n- **Estimated**: medium\n- **Loops**: Some\n- **Conditions**: Moderate\n\n## Examples\n\n### Example 1\n```typescript\n* ```tsx\n * const [theme, setTheme, error] = usePersistedState('theme', 'light');\n * ```\n```\n\n## Implementation Notes\nNo special implementation notes.\n\n## Performance Considerations\nNo specific performance considerations.\n\n## Common Patterns\nNo specific patterns identified.",
  "metadata": {
    "chunk_id": "function_usePersistedState",
    "source_document": "rag-docs/functions/usePersistedState.md",
    "chunk_type": "function-reference",
    "last_updated": "2025-07-08T20:17:18.332Z",
    "topics": [
      "usepersistedstate()",
      "overview",
      "signature",
      "parameters",
      "characteristics",
      "behavior",
      "integration",
      "side effects",
      "dependencies",
      "complexity",
      "examples",
      "example 1",
      "implementation notes",
      "performance considerations",
      "common patterns",
      "typescript",
      "tsx",
      "error",
      "async",
      "sync",
      "function",
      "react",
      "hook",
      "performance"
    ],
    "complexity": "medium",
    "includes_code": true,
    "line_count": 71,
    "token_count": 218,
    "module": "core",
    "category": "type-checking",
    "search_keywords": [
      "usePersistedState",
      "getItem",
      "setState",
      "trySync",
      "setItem",
      "No",
      "Yes",
      "Some",
      "Moderate"
    ],
    "common_questions": [
      "How do I use usePersistedState?",
      "What does usePersistedState do?",
      "usePersistedState example"
    ],
    "id": "usePersistedState",
    "title": "usePersistedState() - Deep Dive",
    "tags": [
      "function",
      "react",
      "sync",
      "internal"
    ],
    "sideEffects": "no",
    "function_name": "usePersistedState",
    "parameters": [
      "id",
      "title",
      "tags",
      "complexity",
      "sideEffects",
      "key",
      "initialValue",
      "value",
      "current"
    ],
    "return_type": "unknown",
    "related_chunks": [
      "function_checkCoreVersion",
      "function_dispatch",
      "function_isErr",
      "function_isFormTryState",
      "function_isLazyProperty",
      "function_isOk",
      "function_isProduction",
      "function_isRetryableTryState",
      "function_isTryState",
      "function_isTrySuccess"
    ],
    "related_functions": [
      "checkCoreVersion",
      "dispatch",
      "isErr",
      "isFormTryState",
      "isLazyProperty",
      "isOk",
      "isProduction",
      "isRetryableTryState",
      "isTryState",
      "isTrySuccess",
      "isTrySyncOptions",
      "listFactories"
    ],
    "usage_patterns": [
      "async-operations",
      "react-integration",
      "performance-optimization"
    ],
    "cross_references": [
      "TryErrorBoundary_deep_dive_signature",
      "configure_deep_dive_signature",
      "create_error_deep_dive_signature",
      "create_error_deep_dive_common-patterns",
      "fromThrown_deep_dive_signature",
      "function_intern",
      "index_overview",
      "isTryError_deep_dive_signature",
      "tryAsync_deep_dive_signature",
      "trySync_deep_dive_signature",
      "trySync_deep_dive_common-patterns",
      "useTry_deep_dive_signature",
      "wrapError_deep_dive_signature"
    ]
  },
  "hash": "bc20194bd3b0a75ba38640b4ec99ea07"
}